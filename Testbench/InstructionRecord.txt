Manual test
Address |Machine Code   |Testbench code                     |Comment
0       |h1180          |LLI(8'h00, 3'd1, 8'h80);           |// R1 = h80
1       |h1201          |LLI(8'h01, 3'd2, 8'h01);           |// R2 = h01
2       |h1b20          |LDRri(8'h02, 3'd3, 3'd1, 5'b00000);|// R3 = MEM[R1 + 0] = MEM[h80] = h1
3       |h2428          |LDRrr(8'h03, 3'd4, 3'd1, 3'd2);    |// R4 = MEM[R1 + R2] = MEM[h80 + h01] = MEM[h81] = h21
4       |h0572          |SUB(8'h04, 3'd5, 3'd3, 3'd4);      |// R5 = R4 - R3 = h1 - h21 = hFFE0; N = 1;
5       |he060          |OutR(8'h05, 3'd3);                 |// OutR = R3 = h1
6       |he080          |OutR(8'h06, 3'd4);                 |// OutR = R4 = h21
7       |he0a0          |OutR(8'h07, 3'd5);                 |// OutR = R5 = hFFE0
8       |he001          |HLT(8'h08);                        |// HLT

Q1 Find the minimum and maximum from two numbers in memory.
LLI R1, h'80 // Address of data
LDR R2, R1, 0 // Load data from memory to registers
LDR R3, R1, 1
CMP R2, R1  

Q2 Add two numbers in memory and store the result in another memory location.
LLI(8'h00, 3'd1, 8'h80); // R1 = h80
LLI(8'h01, 3'd2, 8'h90); // R2 = h90
LDRri(8'h02, 3'd3, 3'd1, 5'b00000); // R3 = MEM[h80] = h1
LDRri(8'h03, 3'd4, 3'd1, 5'b00001); // R4 = MEM[h81] = h21
ADD(8'h04, 3'd5, 3'd3, 3'd4); // R5 = R3 + R4
STRri(8'h05, 3'd5, 3'd2, 5'b00000); // MEM[h90] = R5 = h22
HLT(8'h06); // HLT